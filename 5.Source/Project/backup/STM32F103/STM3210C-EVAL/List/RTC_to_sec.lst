###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       24/Apr/2019  16:42:19
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\RTC_to_sec.c
#    Command line =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\RTC_to_sec.c -D
#        USE_STDPERIPH_DRIVER -D STM32F10X_MD -D USE_STM3210C_EVAL -lcN
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\List
#        --diag_suppress pa082 -o
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\Obj
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Full.h" -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\ -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Libraries\CMSIS\CM3\CoreSupport\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Utilities\STM32_EVAL\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Utilities\STM32_EVAL\STM3210C_EVAL\
#        -Ohs --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Korean_Korea.949
#    List file    =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\List\RTC_to_sec.lst
#    Object file  =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\Obj\RTC_to_sec.o
#
###############################################################################

D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\RTC_to_sec.c
      1          // rtc.c
      2          #include "hw_control.h"
      3          #include "rtc_to_sec.h"
      4          
      5          // this array represents the number of days in one non-leap year at 
      6          // the beginning of each month
      7          u32 DaysToMonth[13] = {0,31,59,90,120,151,181,212,243,273,304,334,365};
      8          
      9          u32 RTC_DateToBinary(tm_struct *datetime) 
     10          {
     11          	u32 iday;
     12          	u32 val;
     13          
     14          	iday = 365 * (datetime->tm_year - 70) + DaysToMonth[datetime->tm_mon-1] + (datetime->tm_mday - 1);
     15          	iday = iday + (datetime->tm_year - 69) / 4;
     16          	if ((datetime->tm_mon > 2) && ((datetime->tm_year % 4) == 0)) {
     17          		iday++;
     18          	}
     19          	val = datetime->tm_sec + 60 * datetime->tm_min + 3600 * (datetime->tm_hour + 24 * iday);
     20          	return val;
     21          }
     22          
     23          void RTC_BinaryToDate(u32 binary,tm_struct *datetime) 
     24          {
     25          	u32 hour;
     26          	u32 day;
     27          	u32 minute;
     28          	u32 second;
     29          	u32 month;
     30          	u32 year;
     31          
     32          	u32 whole_minutes;
     33          	u32 whole_hours;
     34          	u32 whole_days;
     35          	u32 whole_days_since_1968;
     36          	u32 leap_year_periods;
     37          	u32 days_since_current_lyear;
     38          	u32 whole_years;
     39          	u32 days_since_first_of_year;
     40          	u32 days_to_month;
     41          	u32 day_of_week;
     42          
     43          	whole_minutes = binary / 60;
     44          	second = binary - (60 * whole_minutes); // leftover seconds
     45          
     46          	whole_hours = whole_minutes / 60;
     47          	minute = whole_minutes - (60 * whole_hours); // leftover minutes
     48          
     49          	whole_days = whole_hours / 24;
     50          	hour = whole_hours - (24 * whole_days); // leftover hours
     51          
     52          	whole_days_since_1968 = whole_days + 365 + 366;
     53          	leap_year_periods = whole_days_since_1968 / ((4 * 365) + 1);
     54          
     55          	days_since_current_lyear = whole_days_since_1968 % ((4 * 365) + 1);
     56          
     57          	// if days are after a current leap year then add a leap year period
     58          	if ((days_since_current_lyear >= (31 + 29))) {
     59          		leap_year_periods++;
     60          	}
     61          	
     62          	whole_years = (whole_days_since_1968 - leap_year_periods) / 365;
     63          	days_since_first_of_year = whole_days_since_1968 - (whole_years * 365) - leap_year_periods;
     64          
     65          	if ((days_since_current_lyear <= 365) && (days_since_current_lyear >= 60)) {
     66          		days_since_first_of_year++;
     67          	}
     68          	year = whole_years + 68;
     69          
     70          	// setup for a search for what month it is based on how many days have past
     71          	// within the current year
     72          	month = 13;
     73          	days_to_month = 366;
     74          	while (days_since_first_of_year < days_to_month) {
     75          		month--;
     76          		days_to_month = DaysToMonth[month-1];
     77          		if ((month > 2) && ((year % 4) == 0)) {
     78          			days_to_month++;
     79          		}
     80          	}
     81          	day = days_since_first_of_year - days_to_month + 1;
     82          
     83          	day_of_week = (whole_days + 4) % 7;
     84          
     85          	datetime->tm_yday = 
     86          	days_since_first_of_year; /* days since January 1 - [0,365] */
     87          	datetime->tm_sec = second; /* seconds after the minute - [0,59] */
     88          	datetime->tm_min = minute; /* minutes after the hour - [0,59] */
     89          	datetime->tm_hour = hour; /* hours since midnight - [0,23] */
     90          	datetime->tm_mday = day; /* day of the month - [1,31] */
     91          	datetime->tm_wday = day_of_week; /* days since Sunday - [0,6] */
     92          	datetime->tm_mon = month; /* months since January - [0,11] */
     93          	datetime->tm_year = year; /* years since 1900 */
     94          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      20   RTC_BinaryToDate
      12   RTC_DateToBinary


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
      52  DaysToMonth
     182  RTC_BinaryToDate
     102  RTC_DateToBinary

 
  52 bytes in section .data
 288 bytes in section .text
 
 288 bytes of CODE memory
  52 bytes of DATA memory

Errors: none
Warnings: none
