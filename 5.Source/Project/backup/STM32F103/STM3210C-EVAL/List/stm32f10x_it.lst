###############################################################################
#
# IAR ANSI C/C++ Compiler V7.70.1.11437/W32 for ARM       24/Apr/2019  16:42:21
# Copyright 1999-2016 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\stm32f10x_it.c
#    Command line =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\stm32f10x_it.c
#        -D USE_STDPERIPH_DRIVER -D STM32F10X_MD -D USE_STM3210C_EVAL -lcN
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\List
#        --diag_suppress pa082 -o
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\Obj
#        --debug --endian=little --cpu=Cortex-M3 -e --fpu=None --dlib_config
#        "C:\Program Files (x86)\IAR Systems\Embedded Workbench
#        7.5\arm\INC\c\DLib_Config_Full.h" -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\ -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Libraries\CMSIS\CM3\CoreSupport\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Libraries\CMSIS\CM3\DeviceSupport\ST\STM32F10x\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Libraries\STM32F10x_StdPeriph_Driver\inc\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Utilities\STM32_EVAL\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Utilities\STM32_EVAL\Common\
#        -I
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\..\..\..\Utilities\STM32_EVAL\STM3210C_EVAL\
#        -Ohs --use_c++_inline -I "C:\Program Files (x86)\IAR Systems\Embedded
#        Workbench 7.5\arm\CMSIS\Include\"
#    Locale       =  Korean_Korea.949
#    List file    =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\List\stm32f10x_it.lst
#    Object file  =  
#        D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\STM3210C-EVAL\Obj\stm32f10x_it.o
#
###############################################################################

D:\12.물섭취량조사기\5.Source\Project\backup\STM32F103\stm32f10x_it.c
      1          /**
      2            ******************************************************************************
      3            * @file    GPIO/IOToggle/stm32f10x_it.c 
      4            * @author  MCD Application Team
      5            * @version V3.5.0
      6            * @date    08-April-2011
      7            * @brief   Main Interrupt Service Routines.
      8            *          This file provides template for all exceptions handler and peripherals
      9            *          interrupt service routine.
     10            ******************************************************************************
     11            * @attention
     12            *
     13            * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
     14            * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE
     15            * TIME. AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY
     16            * DIRECT, INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING
     17            * FROM THE CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE
     18            * CODING INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
     19            *
     20            * <h2><center>&copy; COPYRIGHT 2011 STMicroelectronics</center></h2>
     21            ******************************************************************************
     22            */
     23          
     24          /* Includes ------------------------------------------------------------------*/
     25          #include "stm32f10x_it.h"
     26          
     27          /** @addtogroup STM32F10x_StdPeriph_Examples
     28            * @{
     29            */
     30          
     31          /** @addtogroup GPIO_IOToggle
     32            * @{
     33            */
     34          
     35          /* Private typedef -----------------------------------------------------------*/
     36          /* Private define ------------------------------------------------------------*/
     37          /* Private macro -------------------------------------------------------------*/
     38          /* Private variables ---------------------------------------------------------*/
     39          /* Private function prototypes -----------------------------------------------*/
     40          /* Private functions ---------------------------------------------------------*/
     41          
     42          /******************************************************************************/
     43          /*            Cortex-M3 Processor Exceptions Handlers                         */
     44          /******************************************************************************/
     45          
     46          /**
     47            * @brief  This function handles NMI exception.
     48            * @param  None
     49            * @retval None
     50            */
     51          void NMI_Handler(void)
     52          {
     53          }
     54          
     55          /**
     56            * @brief  This function handles Hard Fault exception.
     57            * @param  None
     58            * @retval None
     59            */
     60          void HardFault_Handler(void)
     61          {
     62            /* Go to infinite loop when Hard Fault exception occurs */
     63            while (1)
     64            {
     65            }
     66          }
     67          
     68          /**
     69            * @brief  This function handles Memory Manage exception.
     70            * @param  None
     71            * @retval None
     72            */
     73          void MemManage_Handler(void)
     74          {
     75            /* Go to infinite loop when Memory Manage exception occurs */
     76            while (1)
     77            {
     78            }
     79          }
     80          
     81          /**
     82            * @brief  This function handles Bus Fault exception.
     83            * @param  None
     84            * @retval None
     85            */
     86          void BusFault_Handler(void)
     87          {
     88            /* Go to infinite loop when Bus Fault exception occurs */
     89            while (1)
     90            {
     91            }
     92          }
     93          
     94          /**
     95            * @brief  This function handles Usage Fault exception.
     96            * @param  None
     97            * @retval None
     98            */
     99          void UsageFault_Handler(void)
    100          {
    101            /* Go to infinite loop when Usage Fault exception occurs */
    102            while (1)
    103            {
    104            }
    105          }
    106          
    107          /**
    108            * @brief  This function handles SVCall exception.
    109            * @param  None
    110            * @retval None
    111            */
    112          void SVC_Handler(void)
    113          {
    114          }
    115          
    116          /**
    117            * @brief  This function handles Debug Monitor exception.
    118            * @param  None
    119            * @retval None
    120            */
    121          void DebugMon_Handler(void)
    122          {
    123          }
    124          
    125          /**
    126            * @brief  This function handles PendSV_Handler exception.
    127            * @param  None
    128            * @retval None
    129            */
    130          void PendSV_Handler(void)
    131          {
    132          }
    133          
    134          /**
    135            * @brief  This function handles SysTick Handler.
    136            * @param  None
    137            * @retval None
    138            */
    139          /**
    140          void SysTick_Handler(void)
    141          {
    142          }*/	//>
    143          
    144          /******************************************************************************/
    145          /*                 STM32F10x Peripherals Interrupt Handlers                   */
    146          /*  Add here the Interrupt Handler for the used peripheral(s) (PPP), for the  */
    147          /*  available peripheral interrupt handler's name please refer to the startup */
    148          /*  file (startup_stm32f10x_xx.s).                                            */
    149          /******************************************************************************/
    150          
    151          /**
    152            * @brief  This function handles PPP interrupt request.
    153            * @param  None
    154            * @retval None
    155            */
    156          /*void PPP_IRQHandler(void)
    157          {
    158          }*/
    159          
    160          /**
    161            * @}
    162            */
    163          
    164          /**
    165            * @}
    166            */
    167          
    168          /******************* (C) COPYRIGHT 2011 STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   BusFault_Handler
       0   DebugMon_Handler
       0   HardFault_Handler
       0   MemManage_Handler
       0   NMI_Handler
       0   PendSV_Handler
       0   SVC_Handler
       0   UsageFault_Handler


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       2  BusFault_Handler
       2  DebugMon_Handler
       2  HardFault_Handler
       2  MemManage_Handler
       2  NMI_Handler
       2  PendSV_Handler
       2  SVC_Handler
       2  UsageFault_Handler

 
 16 bytes in section .text
 
 16 bytes of CODE memory

Errors: none
Warnings: none
